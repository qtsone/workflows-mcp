name: state-management-merge
description: Test MergeJSONState for updating existing state
tags: [test, core, state, merge, json]
inputs:
  state_file:
    type: str
    default: "/tmp/test-merge-state.json"
    description: "Path to state file"
blocks:
  - id: setup
    type: WriteJSONState
    inputs:
      path: "{{inputs.state_file}}"
      data:
        phase: "init"
        count: 0
  - id: merge_update
    type: MergeJSONState
    inputs:
      path: "{{inputs.state_file}}"
      updates:
        phase: "updated"
        count: 1
        new_field: "added"
    depends_on: [setup]
  - id: read_result
    type: ReadJSONState
    inputs:
      path: "{{inputs.state_file}}"
    depends_on: [merge_update]
  - id: cleanup
    type: Shell
    inputs:
      command: rm -f "{{inputs.state_file}}"
    depends_on: [read_result]
outputs:
  phase: "{{blocks.read_result.outputs.data.phase}}"
  count: "{{blocks.read_result.outputs.data.count}}"
  new_field: "{{blocks.read_result.outputs.data.new_field}}"
  merge_succeeded: "{{blocks.merge_update.succeeded}}"
  cleanup_done: "{{blocks.cleanup.succeeded}}"
