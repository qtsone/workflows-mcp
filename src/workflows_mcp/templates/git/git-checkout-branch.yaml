name: git-checkout-branch
description: Create and checkout a new feature branch from base branch
version: "2.0"
author: Workflows MCP Team
tags: [git, checkout, branch, feature]

inputs:
  branch_name:
    type: str
    description: (Required) Name of the feature branch to create
    required: true

  base_branch:
    type: str
    description: (Optional) Base branch to branch from (main, master, develop)
    default: ""
    required: false

  working_dir:
    type: str
    description: (Optional) Git repository directory
    default: "."
    required: false

  fetch_first:
    type: bool
    description: (Optional) Fetch from remote before creating branch
    default: true
    required: false

  push_to_remote:
    type: bool
    description: (Optional) Push branch to remote after creation
    default: false
    required: false

blocks:
  - id: fetch_remote
    type: Shell
    description: "Fetch latest changes from remote"
    inputs:
      command: "git fetch origin"
      working_dir: "${inputs.working_dir}"
      timeout: 5
    condition: "${inputs.fetch_first}"

  - id: current_branch
    type: Shell
    inputs:
      command: |
        git branch --show-current > $SCRATCH/current_branch.txt
      working_dir: "${inputs.working_dir}"
      timeout: 5
    outputs:
      name:
        type: str
        path: "$SCRATCH/current_branch.txt"
        description: "Current branch name"

  - id: checkout_base
    type: Shell
    description: "Checkout base branch"
    inputs:
      command: "git checkout ${inputs.base_branch}"
      working_dir: "${inputs.working_dir}"
      timeout: 30
    condition: "${inputs.base_branch != '' and inputs.base_branch != blocks.current_branch.outputs.name}"
    depends_on:
      - block: fetch_remote
        required: false
      - block: current_branch
        required: true

  - id: create_branch
    type: Shell
    inputs:
      command: "git checkout -b ${inputs.branch_name}"
      working_dir: "${inputs.working_dir}"
      timeout: 30
    depends_on:
      - block: checkout_base
        required: false

  - id: push_branch
    depends_on:
      - block: current_branch
        required: true
    condition: "${inputs.push_to_remote}"
    type: Shell
    inputs:
      command: "git push -u origin ${inputs.branch_name}"
      working_dir: "${inputs.working_dir}"
      timeout: 60

  - id: summary
    type: RenderTemplate
    inputs:
      template: |
        Feature Branch Created:
        - Branch: {{ branch_name }}
        - Base: {{ base_branch }}
        - Current branch: {{ current_branch }}
        - Pushed to remote: {{ push_status }}
      variables:
        branch_name: "${inputs.branch_name}"
        base_branch: "${inputs.base_branch}"
        current_branch: "${blocks.current_branch.outputs.name}"
        pushed: "${blocks.push_branch.succeeded}"
    depends_on:
      - block: create_branch
        required: true
      - block: push_branch
        required: false

outputs:
  summary: "${blocks.summary.outputs.content}"
