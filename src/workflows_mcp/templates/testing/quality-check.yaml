name: quality-check
description: Language-agnostic quality check wrapper that delegates to language-specific linting, type checking, and formatting tools
version: "1.0"
author: Workflows MCP Team
tags: [quality, linting, formatting, type-checking, tdd, language-agnostic, wrapper]

inputs:
  language:
    type: str
    description: Programming language for the project (python, javascript, go, rust, etc.)
    required: true

  source_path:
    type: str
    description: Path to source code directory or file to check
    default: "src/"
    required: false

  strict:
    type: bool
    description: Enable strict mode (language-specific strictness enforcement)
    default: false
    required: false

  check_linting:
    type: bool
    description: Enable linting checks
    default: true
    required: false

  check_types:
    type: bool
    description: Enable type checking
    default: true
    required: false

  check_formatting:
    type: bool
    description: Enable formatting validation
    default: true
    required: false

  working_dir:
    type: str
    description: Working directory for checks
    default: "."
    required: false

  venv_path:
    type: str
    description: Virtual environment path (language-specific, e.g., Python venv, Node node_modules)
    default: ""
    required: false

blocks:
  # Delegate to language-specific quality checker
  # If workflow doesn't exist, Workflow will fail with clear error listing available workflows
  - id: run_quality_check
    type: Workflow
    inputs:
      workflow: "{{inputs.language}}-quality-check"
      inputs:
        source_path: "{{inputs.source_path}}"
        strict: {{inputs.strict}}
        check_linting: {{inputs.check_linting}}
        check_types: {{inputs.check_types}}
        check_formatting: {{inputs.check_formatting}}
        working_dir: "{{inputs.working_dir}}"
        venv_path: "{{inputs.venv_path}}"

# Pass through outputs from language-specific quality checker
outputs:
  # Individual check results
  linting_passed: "{{blocks.run_quality_check.outputs.linting_passed}}"
  linting_exit_code: "{{blocks.run_quality_check.outputs.linting_exit_code}}"

  typing_passed: "{{blocks.run_quality_check.outputs.typing_passed}}"
  typing_exit_code: "{{blocks.run_quality_check.outputs.typing_exit_code}}"

  formatting_passed: "{{blocks.run_quality_check.outputs.formatting_passed}}"
  formatting_exit_code: "{{blocks.run_quality_check.outputs.formatting_exit_code}}"

  # Overall status
  all_checks_passed: "{{blocks.run_quality_check.outputs.all_checks_passed}}"

  # Summary and metadata
  summary: "{{blocks.run_quality_check.outputs.summary}}"

  # Full outputs for debugging
  linting_output: "{{blocks.run_quality_check.outputs.linting_output}}"
  typing_output: "{{blocks.run_quality_check.outputs.typing_output}}"
  formatting_output: "{{blocks.run_quality_check.outputs.formatting_output}}"

  # Execution time
  execution_time_ms: "{{blocks.run_quality_check.metadata.execution_time_ms}}"

  # Wrapper metadata
  language_used: "{{inputs.language}}"
  workflow_delegated_to: "{{inputs.language}}-quality-check"
